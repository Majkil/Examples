using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration.Conventions;
using System.ComponentModel.DataAnnotations;
using System.Linq;

using System.Text;
using System.Threading.Tasks;
using System.ComponentModel.DataAnnotations.Schema;

namespace Example12
{
    class Program
    {
        
        static void Main()
        {
            Console.WriteLine("Hello");
            RunExample();
            Console.ReadKey();

         
        }

        public static void RunExample()
        {
            //select all records in database

            using (var context = new ContactContext())
            {

                //selecting top 2 using Take keyword
                var contacts = (from a in context.myContact
                              // where a.FirstName.StartsWith("G")
                               orderby a.Id
                               select a).Take(2);

                

               // Contact myC = contacts.ToList<Contact>().Find(c => c.Id == 5);

               // Console.WriteLine("Test " + myC.Id + " " + myC.FirstName);

                foreach (var c in contacts)
                {
                    Console.WriteLine(c.Id + " " + c.FirstName + " " + c.SecondName + " " + c.TelNumber);
                    if (c.Id==4)
                    {
                        context.myContact.Remove(c);
                    }
                }
                context.SaveChanges();
            }

            // ### Add a db record
            
            using (var context = new ContactContext())
            {
                context.Configuration.ValidateOnSaveEnabled = false;
                context.myContact.Add(
                    new Contact
                    {
                        FirstName = "dsdf",
                        SecondName = "Said",
                        TelNumber = "1234",
                    });
                context.SaveChanges();

                
                
            }


            //update a db record

            using (var context = new ContactContext())
            {
                var contacts = from a in context.myContact
                                   // where a.FirstName.StartsWith("G")
                               orderby a.FirstName
                               select a;

                foreach (var c in contacts)
                {
                    c.FirstName = c.FirstName + " Updated";
                }
                
                context.SaveChanges();
            }


        }


    }

    [Table("Contact")]
    public class Contact
    {
        [Column("id")]
        [Key]
        public long? Id { get; set; }

        
        public string FirstName { get; set; }
        public string SecondName { get; set; }
        public string TelNumber { get; set; }


    }

    class ContactContext : DbContext
    {
        public DbSet<Contact> myContact { get; set; }
        
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            
            modelBuilder.Conventions
                .Remove<PluralizingTableNameConvention>();

            //the id value is generated by the database on a new entry
            modelBuilder.Entity<Contact>()
        .Property(c => c.Id)
        .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
        }
    }

   
    

}
